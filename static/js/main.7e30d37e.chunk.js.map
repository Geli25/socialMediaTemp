{"version":3,"sources":["data.js","Components/Heart.js","store/actions/appData.js","store/actions/actionTypes.js","Components/Post.js","Components/Posts.js","Components/MainPage.js","App.js","serviceWorker.js","store/reducers/appData.js","index.js"],"names":["data","id","user","image","likes","comments","title","name","crown","last_sign_in","liked_designs","connect","reduxState","currentUser","appData","dispatch","addCurrentLikes","liked","type","actionCreators","removeCurrentLikes","unliked","updateLikes","index","plusMinus","props","includes","react_default","a","createElement","src","onClick","users","find","className","style","width","marginLeft","marginTop","Components_Heart","designs","map","design","src_Components_Post","key","MainPage","this","updateDesigns","updateCurrentUser","updateUsers","Components_Posts","Component","App","src_Components_MainPage","Boolean","window","location","hostname","match","initialState","reducer","curState","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","newLiked","filter","number","newLikes","newDesigns","splice","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e30d37e.chunk.js","sourcesContent":["export default {\r\n    \"designs\": [\r\n        {\r\n            \"id\": 0,\r\n            \"user\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image1.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"1 The best living room design ever\"\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"user\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image2.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"2 The best living room design ever\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"user\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image3.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"3 The best living room design ever\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"user\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image4.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"4 The best living room design ever\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"user\": 1,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image5.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"5 The best living room design ever\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"user\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/thumbs/image6.png\",\r\n            \"likes\": 12,\r\n            \"comments\": 2,\r\n            \"title\": \"6 The best living room design ever\"\r\n        }\r\n    ],\r\n    \"users\": [\r\n        {\r\n            \"id\": 0,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/profile/bella.png\",\r\n            \"name\": \"bella\",\r\n            \"crown\": true,\r\n            \"last_sign_in\": 1\r\n        },\r\n        {\r\n            \"id\": 1,\r\n            \"image\": \"https://s3.amazonaws.com/temp-for-interview/design_images/profile/dm.png\",\r\n            \"name\": \"DecorMatters\",\r\n            \"crown\": false,\r\n            \"last_sign_in\": 1\r\n        }\r\n    ],\r\n    \"current_user\": {\r\n        \"liked_designs\": [\r\n            0,\r\n            1,\r\n            2,\r\n            3,\r\n            5\r\n        ]\r\n    }\r\n}","import React from 'react';\r\nimport * as actionCreators from '../store/actions/appData';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst Heart=(props)=>(\r\n    props.currentUser.liked_designs.includes(props.id) ? \r\n    <img \r\n        src=\"https://s3.amazonaws.com/temp-for-interview/design_images/misc/like-filled.png\"\r\n        onClick={()=>{\r\n            props.removeCurrentLikes(props.id);\r\n            props.updateLikes(\"-\", props.index);\r\n        }}/> : \r\n    <img \r\n        src=\"https://s3.amazonaws.com/temp-for-interview/design_images/misc/like-empty.png\"\r\n        onClick={()=>{\r\n            props.addCurrentLikes(props.id);\r\n            props.updateLikes(\"+\", props.index)\r\n        }} />\r\n)\r\n\r\nconst mapStatetoProps = reduxState => ({\r\n    currentUser: reduxState.appData.currentUser\r\n})\r\n\r\nconst mapDispatchtoProps=dispatch=>({\r\n    addCurrentLikes:(liked)=>dispatch(actionCreators.addCurrentLikes(liked)),\r\n    removeCurrentLikes:(unliked)=>dispatch(actionCreators.removeCurrentLikes(unliked)),\r\n    updateLikes:(type,index)=>dispatch(actionCreators.updateLikes(type,index))\r\n})\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(Heart);","import * as actionTypes from './actionTypes';\r\n\r\nexport const updateDesigns = (designs) => ({\r\n    type: actionTypes.UPDATE_DESIGNS,\r\n    designs: designs\r\n})\r\n\r\nexport const updateUsers = (users) => ({\r\n    type: actionTypes.UPDATE_USERS,\r\n    users: users\r\n})\r\n\r\nexport const updateCurrentUser = (currentUser) => ({\r\n    type: actionTypes.UPDATE_CURRENT_USER,\r\n    currentUser: currentUser\r\n})\r\n\r\nexport const updateLikes=(type,index)=>({\r\n    type:actionTypes.UPDATE_LIKE,\r\n    plusMinus:type,\r\n    index:index\r\n})\r\n\r\nexport const addCurrentLikes = (liked) => ({\r\n    type: actionTypes.ADD_CURRENT_LIKES,\r\n    liked: liked\r\n})\r\n\r\nexport const removeCurrentLikes=(unliked)=>({\r\n    type:actionTypes.REMOVE_CURRENT_LIKES,\r\n    unliked:unliked\r\n})","export const UPDATE_DESIGNS ='UPDATE_DESIGNS';\r\nexport const UPDATE_USERS ='UPDATE_USERS';\r\nexport const UPDATE_CURRENT_USER ='UPDATE_CURRENT_USER';\r\nexport const UPDATE_LIKE ='UPDATE_LIKE';\r\nexport const ADD_CURRENT_LIKES ='ADD_CURRENT_LIKES';\r\nexport const REMOVE_CURRENT_LIKES ='REMOVE_CURRENT_LIKES';","import React from 'react';\r\nimport './Post.css';\r\nimport Heart from './Heart';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst Post = (props) => {\r\n    const user=props.users.find(user=>user.id===props.user);\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className=\"postContent\">\r\n                <div className=\"userInfo\">\r\n                    <img src={user.image} />\r\n                    <p><b>{user.name}</b></p>\r\n                    {user.crown ? <img style={{width:\"20px\", marginLeft:\"2px\",marginTop:\"-3px\"}} src=\"https://s3.amazonaws.com/temp-for-interview/design_images/misc/crown.png\"/> : null}\r\n                </div>\r\n            <img src={props.image} />\r\n                <div className=\"icons\">\r\n                    <Heart index={props.index} id={props.id}/>\r\n                    <img src=\"https://s3.amazonaws.com/temp-for-interview/design_images/misc/comment.png\" />\r\n                    <img src=\"https://s3.amazonaws.com/temp-for-interview/design_images/misc/share.png\" />\r\n                </div>\r\n            <p className=\"title\"><span><b>{user.name}</b></span>{props.title}</p>\r\n            <p className=\"likesComments\">{props.likes} likes, {props.comments} comments</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStatetoProps=reduxState=>({\r\n    users:reduxState.appData.users,\r\n})\r\n\r\nexport default connect(mapStatetoProps)(Post);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Post from './Post'\r\n\r\nconst Posts=(props)=>(props.designs.map((design,index)=>(\r\n    <Post \r\n        key={design.id}\r\n        id={design.id} \r\n        comments={design.comments}\r\n        likes={design.likes}\r\n        title={design.title}\r\n        image={design.image}\r\n        user={design.user}\r\n        index={index} /> \r\n)))\r\n\r\nconst mapStatetoProps=reduxState=>({\r\n    designs:reduxState.appData.designs\r\n})\r\n\r\nexport default connect(mapStatetoProps)(Posts);","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../store/actions/appData';\r\nimport './MainPage.css';\r\nimport data from '../data';\r\n\r\nimport Posts from './Posts';\r\n\r\nclass MainPage extends Component {\r\n\r\n    componentWillMount() {\r\n        // axios.get(' https://s3.amazonaws.com/temp-for-interview/data.json')\r\n        //     .then(response => {\r\n        //         console.log(response);\r\n        //     })\r\n        this.props.updateDesigns(data.designs);\r\n        this.props.updateCurrentUser(data.current_user);\r\n        this.props.updateUsers(data.users);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Posts\">\r\n            <div className=\"postsContainer\">\r\n                <Posts />\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    updateDesigns:(designs)=>dispatch(actionCreators.updateDesigns(designs)),\r\n    updateUsers:(users)=>dispatch(actionCreators.updateUsers(users)),\r\n    updateCurrentUser:(currentUser)=>dispatch(actionCreators.updateCurrentUser(currentUser))\r\n})\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(MainPage);","import React from 'react';\nimport './App.css';\n\nimport MainPage from './Components/MainPage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    designs:[],\r\n    users:[],\r\n    currentUser:{}\r\n}\r\n\r\nconst reducer = (curState = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.UPDATE_DESIGNS:\r\n            return {\r\n                ...curState,\r\n                designs:action.designs\r\n            }\r\n        case actionTypes.UPDATE_USERS:\r\n            return {\r\n                ...curState,\r\n                users: action.users\r\n            }\r\n        case actionTypes.UPDATE_CURRENT_USER:\r\n            return {\r\n                ...curState,\r\n                currentUser: action.currentUser\r\n            }\r\n        case actionTypes.ADD_CURRENT_LIKES:\r\n            return {\r\n                ...curState,\r\n                currentUser:{\r\n                    ...curState.currentUser,\r\n                    liked_designs:[\r\n                        ...curState.currentUser.liked_designs,\r\n                        action.liked\r\n                    ]\r\n                }\r\n            }\r\n        case actionTypes.REMOVE_CURRENT_LIKES:\r\n            let newLiked=curState.currentUser.liked_designs.filter((number)=>number!==action.unliked);\r\n            return{\r\n                ...curState,\r\n                currentUser:{\r\n                    ...curState.currentUser,\r\n                    liked_designs:newLiked\r\n                }\r\n            }\r\n        case actionTypes.UPDATE_LIKE:\r\n        if (action.plusMinus===\"+\"){\r\n            let newLikes = {\r\n                ...curState.designs[action.index],\r\n                likes: curState.designs[action.index].likes+1\r\n            }\r\n            let newDesigns = [...curState.designs];\r\n            newDesigns.splice(action.index, 1, newLikes)\r\n            return {\r\n                ...curState,\r\n                designs: newDesigns\r\n            };\r\n        }\r\n        else if (action.plusMinus===\"-\"){\r\n            let newLikes = {\r\n                ...curState.designs[action.index],\r\n                likes: curState.designs[action.index].likes-1\r\n            }\r\n            let newDesigns = [...curState.designs];\r\n            newDesigns.splice(action.index, 1, newLikes)\r\n            return {\r\n                ...curState,\r\n                designs: newDesigns\r\n            };\r\n        }\r\n        default:\r\n            return curState;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nimport appData from './store/reducers/appData';\n\nconst rootReducer = combineReducers({\n    appData\n});\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}